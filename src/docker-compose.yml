version: '3.4'
#KAFKA 
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    networks:
      - speech_network
  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    healthcheck:
      test:
        ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 30s
      timeout: 10s
      retries: 4
    links: 
     - zookeeper
    networks:
      - speech_network
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_CREATE_TOPICS: "speech:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      HOSTNAME_COMMAND: "echo 127.0.0.1"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: OUTSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
#ELASTIC SEARCH
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: '-Xms256m -Xmx256m'
      network.bind_host: 0.0.0.0
      network.host: 0.0.0.0
      discovery.type: single-node
    networks:
      - speech_network
#PRODUCER
  logcorner.edusync.speech.producer:
    image: ${DOCKER_REGISTRY-}/logcorner-edusync-speech-producer
    build:
      context: .
      dockerfile: LogCorner.EduSync.Speech.Producer/Dockerfile
    restart: on-failure
    networks:
      - speech_network
    depends_on:
      - kafka
#CONSUMER
  logcorner.edusync.speech.consumer:
    image: ${DOCKER_REGISTRY-}/logcorner-edusync-speech-consumer
    build:
      context: .
      dockerfile: LogCorner.EduSync.Speech.Consumer/Dockerfile
    restart: on-failure
    networks:
      - speech_network
    depends_on:
      - kafka
      - elasticsearch
      - logcorner.edusync.speech.producer


volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  speech_network:
    external:
      name: speech_network



